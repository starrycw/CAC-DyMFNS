`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2022/01/02 16:17:39
// Design Name: 
// Module Name: simu_AFNS_Adders
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////

// E:\Workspace\Repositories\Research\TSV\TSV-DyMFNS\Python\DyMFNS_CAC\venv\Scripts\python.exe E:/Workspace/Repositories/Research/TSV/TSV-DyMFNS/Python/DyMFNS_CAC/cac_main/verilog_generation_tools.py
// Generated by cac_main.verilog_generation_tools. Version: 2022.01.02.00
`include "Header_AdaptiveFNS.vh"
module simu_AFNS_Adders(
    
    );
    
    // flags
    reg [1:20] flags;
    
//////////////////////////////////////////////////////////////////////////////////
// Design
//////////////////////////////////////////////////////////////////////////////////
    
    // Adder 1
    wire out_a_01;
    wire out_b_01;
    AFNS_Adder_01 adder01(.flag(flags[1]), .out_a(out_a_01), .out_b(out_b_01));
    
    // Adder 2
    wire [`AFNS_ADDER_OUTA_BLEN_2 - 1 : 0] out_a_02;
    wire [`AFNS_ADDER_OUTB_BLEN_2 - 1 : 0] out_b_02;
    AFNS_Adder_02 adder02( 
                            .flag(flags[2]),
                            .in_a(out_a_01),
                            .in_b(out_b_01),
                            .out_a(out_a_02),
                            .out_b(out_b_02)
                            );
    
    // Adder 3
    wire [`AFNS_ADDER_OUTA_BLEN_3 - 1 : 0] out_a_03;
    wire [`AFNS_ADDER_OUTB_BLEN_3 - 1 : 0] out_b_03;
    AFNS_Adder_03 adder03( 
                            .flag(flags[3]),
                            .in_a(out_a_02),
                            .in_b(out_b_02),
                            .out_a(out_a_03),
                            .out_b(out_b_03)
                            );
    
    // Adder 4
    wire [`AFNS_ADDER_OUTA_BLEN_4 - 1 : 0] out_a_04;
    wire [`AFNS_ADDER_OUTB_BLEN_4 - 1 : 0] out_b_04;
    AFNS_Adder_04 adder04( 
                            .flag(flags[4]),
                            .in_a(out_a_03),
                            .in_b(out_b_03),
                            .out_a(out_a_04),
                            .out_b(out_b_04)
                            );
    
    // Adder 5
    wire [`AFNS_ADDER_OUTA_BLEN_5 - 1 : 0] out_a_05;
    wire [`AFNS_ADDER_OUTB_BLEN_5 - 1 : 0] out_b_05;
    AFNS_Adder_05 adder05( 
                            .flag(flags[5]),
                            .in_a(out_a_04),
                            .in_b(out_b_04),
                            .out_a(out_a_05),
                            .out_b(out_b_05)
                            );
    
    // Adder 6
    wire [`AFNS_ADDER_OUTA_BLEN_6 - 1 : 0] out_a_06;
    wire [`AFNS_ADDER_OUTB_BLEN_6 - 1 : 0] out_b_06;
    AFNS_Adder_06 adder06( 
                            .flag(flags[6]),
                            .in_a(out_a_05),
                            .in_b(out_b_05),
                            .out_a(out_a_06),
                            .out_b(out_b_06)
                            );
    
    // Adder 7
    wire [`AFNS_ADDER_OUTA_BLEN_7 - 1 : 0] out_a_07;
    wire [`AFNS_ADDER_OUTB_BLEN_7 - 1 : 0] out_b_07;
    AFNS_Adder_07 adder07( 
                            .flag(flags[7]),
                            .in_a(out_a_06),
                            .in_b(out_b_06),
                            .out_a(out_a_07),
                            .out_b(out_b_07)
                            );
    
    // Adder 8
    wire [`AFNS_ADDER_OUTA_BLEN_8 - 1 : 0] out_a_08;
    wire [`AFNS_ADDER_OUTB_BLEN_8 - 1 : 0] out_b_08;
    AFNS_Adder_08 adder08( 
                            .flag(flags[8]),
                            .in_a(out_a_07),
                            .in_b(out_b_07),
                            .out_a(out_a_08),
                            .out_b(out_b_08)
                            );
    
    // Adder 9
    wire [`AFNS_ADDER_OUTA_BLEN_9 - 1 : 0] out_a_09;
    wire [`AFNS_ADDER_OUTB_BLEN_9 - 1 : 0] out_b_09;
    AFNS_Adder_09 adder09( 
                            .flag(flags[9]),
                            .in_a(out_a_08),
                            .in_b(out_b_08),
                            .out_a(out_a_09),
                            .out_b(out_b_09)
                            );
    
    // Adder 10
    wire [`AFNS_ADDER_OUTA_BLEN_10 - 1 : 0] out_a_10;
    wire [`AFNS_ADDER_OUTB_BLEN_10 - 1 : 0] out_b_10;
    AFNS_Adder_10 adder10( 
                            .flag(flags[10]),
                            .in_a(out_a_09),
                            .in_b(out_b_09),
                            .out_a(out_a_10),
                            .out_b(out_b_10)
                            );
    
    // Adder 11
    wire [`AFNS_ADDER_OUTA_BLEN_11 - 1 : 0] out_a_11;
    wire [`AFNS_ADDER_OUTB_BLEN_11 - 1 : 0] out_b_11;
    AFNS_Adder_11 adder11( 
                            .flag(flags[11]),
                            .in_a(out_a_10),
                            .in_b(out_b_10),
                            .out_a(out_a_11),
                            .out_b(out_b_11)
                            );
    
    // Adder 12
    wire [`AFNS_ADDER_OUTA_BLEN_12 - 1 : 0] out_a_12;
    wire [`AFNS_ADDER_OUTB_BLEN_12 - 1 : 0] out_b_12;
    AFNS_Adder_12 adder12( 
                            .flag(flags[12]),
                            .in_a(out_a_11),
                            .in_b(out_b_11),
                            .out_a(out_a_12),
                            .out_b(out_b_12)
                            );
    
    // Adder 13
    wire [`AFNS_ADDER_OUTA_BLEN_13 - 1 : 0] out_a_13;
    wire [`AFNS_ADDER_OUTB_BLEN_13 - 1 : 0] out_b_13;
    AFNS_Adder_13 adder13( 
                            .flag(flags[13]),
                            .in_a(out_a_12),
                            .in_b(out_b_12),
                            .out_a(out_a_13),
                            .out_b(out_b_13)
                            );
    
    // Adder 14
    wire [`AFNS_ADDER_OUTA_BLEN_14 - 1 : 0] out_a_14;
    wire [`AFNS_ADDER_OUTB_BLEN_14 - 1 : 0] out_b_14;
    AFNS_Adder_14 adder14( 
                            .flag(flags[14]),
                            .in_a(out_a_13),
                            .in_b(out_b_13),
                            .out_a(out_a_14),
                            .out_b(out_b_14)
                            );
    
    // Adder 15
    wire [`AFNS_ADDER_OUTA_BLEN_15 - 1 : 0] out_a_15;
    wire [`AFNS_ADDER_OUTB_BLEN_15 - 1 : 0] out_b_15;
    AFNS_Adder_15 adder15( 
                            .flag(flags[15]),
                            .in_a(out_a_14),
                            .in_b(out_b_14),
                            .out_a(out_a_15),
                            .out_b(out_b_15)
                            );
    
    // Adder 16
    wire [`AFNS_ADDER_OUTA_BLEN_16 - 1 : 0] out_a_16;
    wire [`AFNS_ADDER_OUTB_BLEN_16 - 1 : 0] out_b_16;
    AFNS_Adder_16 adder16( 
                            .flag(flags[16]),
                            .in_a(out_a_15),
                            .in_b(out_b_15),
                            .out_a(out_a_16),
                            .out_b(out_b_16)
                            );
    
    // Adder 17
    wire [`AFNS_ADDER_OUTA_BLEN_17 - 1 : 0] out_a_17;
    wire [`AFNS_ADDER_OUTB_BLEN_17 - 1 : 0] out_b_17;
    AFNS_Adder_17 adder17( 
                            .flag(flags[17]),
                            .in_a(out_a_16),
                            .in_b(out_b_16),
                            .out_a(out_a_17),
                            .out_b(out_b_17)
                            );
    
    // Adder 18
    wire [`AFNS_ADDER_OUTA_BLEN_18 - 1 : 0] out_a_18;
    wire [`AFNS_ADDER_OUTB_BLEN_18 - 1 : 0] out_b_18;
    AFNS_Adder_18 adder18( 
                            .flag(flags[18]),
                            .in_a(out_a_17),
                            .in_b(out_b_17),
                            .out_a(out_a_18),
                            .out_b(out_b_18)
                            );
    
    // Adder 19
    wire [`AFNS_ADDER_OUTA_BLEN_19 - 1 : 0] out_a_19;
    wire [`AFNS_ADDER_OUTB_BLEN_19 - 1 : 0] out_b_19;
    AFNS_Adder_19 adder19( 
                            .flag(flags[19]),
                            .in_a(out_a_18),
                            .in_b(out_b_18),
                            .out_a(out_a_19),
                            .out_b(out_b_19)
                            );
    
    // Adder 20
    wire [`AFNS_ADDER_OUTA_BLEN_20 - 1 : 0] out_a_20;
    wire [`AFNS_ADDER_OUTB_BLEN_20 - 1 : 0] out_b_20;
    AFNS_Adder_20 adder20( 
                            .flag(flags[20]),
                            .in_a(out_a_19),
                            .in_b(out_b_19),
                            .out_a(out_a_20),
                            .out_b(out_b_20)
                            );
    
//////////////////////////////////////////////////////////////////////////////////
// Simulation
//////////////////////////////////////////////////////////////////////////////////
    initial begin
        flags <= 0;
        # 10;
        $display("FLAGS: %b", flags);
        $display("OUT A: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d", out_a_01, out_a_02, out_a_03, out_a_04, out_a_05, out_a_06, out_a_07, out_a_08, out_a_09, out_a_10, out_a_11, out_a_12, out_a_13, out_a_14, out_a_15, out_a_16, out_a_17, out_a_18, out_a_19, out_a_20);
        $display("OUT B: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d", out_b_01, out_b_02, out_b_03, out_b_04, out_b_05, out_b_06, out_b_07, out_b_08, out_b_09, out_b_10, out_b_11, out_b_12, out_b_13, out_b_14, out_b_15, out_b_16, out_b_17, out_b_18, out_b_19, out_b_20);
        
        # 10;
        flags <= 1;
        # 10;
        $display("FLAGS: %b", flags);
        $display("OUT A: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d", out_a_01, out_a_02, out_a_03, out_a_04, out_a_05, out_a_06, out_a_07, out_a_08, out_a_09, out_a_10, out_a_11, out_a_12, out_a_13, out_a_14, out_a_15, out_a_16, out_a_17, out_a_18, out_a_19, out_a_20);
        $display("OUT B: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d", out_b_01, out_b_02, out_b_03, out_b_04, out_b_05, out_b_06, out_b_07, out_b_08, out_b_09, out_b_10, out_b_11, out_b_12, out_b_13, out_b_14, out_b_15, out_b_16, out_b_17, out_b_18, out_b_19, out_b_20);
        $finish();
    end
endmodule

// Process finished with exit code 0

